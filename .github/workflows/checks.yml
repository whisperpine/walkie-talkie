name: Check by linters

on:
  push:
    branches: ["main"]

jobs:
  typos:
    runs-on: ubuntu-latest
    name: check misspelling by typos
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Run typos command
        shell: nix shell nixpkgs#typos --quiet --command bash {0}
        run: typos --hidden --exclude .git --format brief

  markdownlint:
    runs-on: ubuntu-latest
    name: lint markdown by markdownlint
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Run markdownlint command
        shell: nix shell nixpkgs#markdownlint-cli --quiet --command bash {0}
        run: |
          markdownlint \
              --ignore ./tt-openapi \
              --ignore ./target \
              .

  cargo-clippy:
    runs-on: ubuntu-latest
    name: lint rust code by clippy
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      # Cache Rust dependencies to speed up builds.
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      - name: Run cargo clippy
        # The `-- -D warnings` flag treats all warnings as errors.
        run: cargo clippy --release -- -D warnings

  cargo-doc:
    runs-on: ubuntu-latest
    name: lint rust docstring by rustdoc
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rust-docs
      # Cache Rust dependencies to speed up builds.
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
      # Run cargo clippy in release mode.
      - name: Run cargo doc
        run: cargo doc

  biome-lint:
    runs-on: ubuntu-latest
    name: lint typescript code by biome
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Run biome lint command
        shell: nix shell nixpkgs#biome --quiet --command bash {0}
        run: biome lint

  tflint:
    runs-on: ubuntu-latest
    name: lint opentofu code by tflint
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Run tflint command
        shell: nix shell nixpkgs#tflint --quiet --command bash {0}
        run: tflint --chdir ./infra --recursive

  redocly-lint:
    runs-on: ubuntu-latest
    name: lint openapi specifications
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Run redocly lint command
        shell: nix shell nixpkgs#redocly --quiet --command bash {0}
        run: redocly lint ./openapi/openapi.yaml

  gen-up-to-date:
    runs-on: ubuntu-latest
    name: check if generated code is update to date
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - name: Generate code from openapi specifications
        shell: nix develop .#gen --quiet --command bash {0}
        run: |
          sh ./scripts/gen-rust-axum.sh
          sh ./scripts/gen-typescript.sh
          sh ./scripts/git-status.sh
