name: Build and push container image

on:
  push:
    branches: ["main"]
  # Allows you to run this workflow manually from the Actions tab.
  workflow_dispatch:

jobs:
  wt-websocket:
    name: build wt-websocket and push to ghcr
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Path to dockerfile (current directory).
          file: wtws.Dockerfile # Path to the Dockerfile.
          push: true # Push to registry.
          tags: |
            ghcr.io/${{ github.repository_owner }}/wt-websocket:latest
            ghcr.io/${{ github.repository_owner }}/wt-websocket:${{ steps.vars.outputs.sha_short }}
          platforms: linux/amd64,linux/arm64

  wt-rest-api:
    name: build wt-rest-api and push to ghcr
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v5
      - name: Set up QEMU for multi-platform builds
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: . # Path to dockerfile (current directory).
          file: wtapi.Dockerfile # Path to the Dockerfile.
          push: true # Push to registry.
          tags: |
            ghcr.io/${{ github.repository_owner }}/wt-rest-api:latest
            ghcr.io/${{ github.repository_owner }}/wt-rest-api:${{ steps.vars.outputs.sha_short }}
          platforms: linux/amd64,linux/arm64

  scan-wt-websocket:
    name: scan CVE on the image
    runs-on: ubuntu-latest
    needs: wt-websocket
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v5
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/wt-websocket:${{ steps.vars.outputs.sha_short }}
          severity: CRITICAL,HIGH,MEDIUM
          output: trivy-results.sarif
          format: sarif
          hide-progress: true
          ignore-unfixed: true
          exit-code: 0
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ success() || failure() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          category: trivy-image-scan-wt-websocket

  scan-wt-rest-api:
    name: scan CVE on the image
    runs-on: ubuntu-latest
    needs: wt-rest-api
    permissions:
      security-events: write
    steps:
      - uses: actions/checkout@v5
      - name: Set outputs
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/wt-rest-api:${{ steps.vars.outputs.sha_short }}
          severity: CRITICAL,HIGH,MEDIUM
          output: trivy-results.sarif
          format: sarif
          hide-progress: true
          ignore-unfixed: true
          exit-code: 0
      - name: Upload Trivy scan results to GitHub Security tab
        if: ${{ success() || failure() }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
          category: trivy-image-scan-wt-rest-api
