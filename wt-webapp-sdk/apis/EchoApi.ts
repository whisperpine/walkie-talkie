/* tslint:disable */
/* eslint-disable */
/**
 * API for whisperpine/walkie-talkie project
 * API for whisperpine/walkie-talkie repository on GitHub
 *
 * The version of the OpenAPI document: 0.1.0-alpha
 * Contact: yusonglai64@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface EchoBackRequest {
    body?: string;
}

/**
 * 
 */
export class EchoApi extends runtime.BaseAPI {

    /**
     * Echo the request body
     */
    async echoBackRaw(requestParameters: EchoBackRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<string>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'text/plain';

        const response = await this.request({
            path: `/echo`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<string>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Echo the request body
     */
    async echoBack(requestParameters: EchoBackRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<string> {
        const response = await this.echoBackRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
